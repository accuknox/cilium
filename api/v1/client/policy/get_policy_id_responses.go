// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2017-2021 Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cilium/cilium/api/v1/models"
)

// GetPolicyIDReader is a Reader for the GetPolicyID structure.
type GetPolicyIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPolicyIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPolicyIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetPolicyIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPolicyIDOK creates a GetPolicyIDOK with default headers values
func NewGetPolicyIDOK() *GetPolicyIDOK {
	return &GetPolicyIDOK{}
}

/*GetPolicyIDOK handles this case with default header values.

Success
*/
type GetPolicyIDOK struct {
	Payload *models.PolicyID
}

func (o *GetPolicyIDOK) Error() string {
	return fmt.Sprintf("[GET /policy/{id}][%d] getPolicyIdOK  %+v", 200, o.Payload)
}

func (o *GetPolicyIDOK) GetPayload() *models.PolicyID {
	return o.Payload
}

func (o *GetPolicyIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PolicyID)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPolicyIDNotFound creates a GetPolicyIDNotFound with default headers values
func NewGetPolicyIDNotFound() *GetPolicyIDNotFound {
	return &GetPolicyIDNotFound{}
}

/*GetPolicyIDNotFound handles this case with default header values.

Policy id not found
*/
type GetPolicyIDNotFound struct {
}

func (o *GetPolicyIDNotFound) Error() string {
	return fmt.Sprintf("[GET /policy/{id}][%d] getPolicyIdNotFound ", 404)
}

func (o *GetPolicyIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
